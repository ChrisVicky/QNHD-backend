basePath: /api/v1
definitions:
  b.authRes:
    properties:
      super:
        example: false
        type: boolean
      token:
        type: string
    type: object
  models.Admin:
    properties:
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  models.Banned:
    properties:
      create_at:
        type: string
      delete_at:
        type: string
      id:
        type: integer
      uid:
        type: integer
    type: object
  models.ListRes:
    properties:
      list:
        type: object
      total:
        example: 1
        type: integer
    type: object
  models.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
host: 116.62.107.46:7013
info:
  contact: {}
  description: 青年湖底api
  license:
    name: Apache 2.0
  title: QNHD API
  version: "1.0"
paths:
  /b/admin:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 管理员昵称
        in: query
        name: name
        required: true
        type: string
      - description: 用于验证用户
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      summary: 删除管理员
      tags:
      - backend
      - admin
    get:
      consumes:
      - application/json
      parameters:
      - description: 用于验证用户
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Admin'
                        type: array
                    type: object
              type: object
      summary: 获取所有的管理员
      tags:
      - backend
      - admin
    post:
      consumes:
      - application/json
      parameters:
      - description: 管理员昵称
        in: query
        name: name
        required: true
        type: string
      - description: 管理员密码, 32位小写md5
        in: query
        name: password
        required: true
        type: string
      - description: 用于验证用户
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/models.Response'
      summary: 增加管理员
      tags:
      - backend
      - admin
    put:
      consumes:
      - application/json
      parameters:
      - description: 管理员昵称
        in: query
        name: name
        required: true
        type: string
      - description: 管理员密码, 32位小写md5
        in: query
        name: password
        required: true
        type: string
      - description: 用于验证用户
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/models.Response'
      summary: 修改管理员密码
      tags:
      - backend
      - admin
  /b/auth:
    get:
      consumes:
      - application/json
      description: getAuth
      parameters:
      - description: admin name
        in: query
        name: name
        required: true
        type: string
      - description: admin password，发送密码的32位小写md5
        in: query
        name: password
        required: true
        type: string
      - description: jwt token，如果用此参数无需传递name和password，可用于刷新token
        in: query
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/b.authRes'
              type: object
        "20003":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      summary: 后端获取token
      tags:
      - backend
  /b/banned:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        required: true
        type: string
      - description: 用于验证用户
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      summary: 删除封禁用户(解禁), 此接口不使用
      tags:
      - backend
      - banned
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        required: true
        type: string
      - description: 用于验证用户
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Banned'
                        type: array
                    type: object
              type: object
        "400":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      summary: 获取封禁用户
      tags:
      - backend
      - banned
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        required: true
        type: string
      - description: 用于验证用户
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      summary: 添加封禁用户
      tags:
      - backend
      - banned
schemes:
- http
swagger: "2.0"
