basePath: /api/v1
definitions:
  b.UserResponse:
    properties:
      bloced_start:
        type: string
      blocked_over:
        type: string
      blocked_remain:
        type: integer
      email:
        type: string
      is_banned:
        type: boolean
      is_blocked:
        type: boolean
      password:
        type: string
      register_at:
        type: string
      status:
        type: integer
      uid:
        type: integer
    type: object
  b.authRes:
    properties:
      super:
        type: boolean
      token:
        type: string
    type: object
  f.authRes:
    properties:
      token:
        type: string
    type: object
  f.postRes:
    type: object
  f.postResponse:
    properties:
      content:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      floors:
        items:
          $ref: '#/definitions/models.Floor'
        type: array
      id:
        type: integer
      picture_url:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      uid:
        type: integer
      updated_at:
        type: string
    type: object
  models.Admin:
    properties:
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  models.Banned:
    properties:
      create_at:
        type: string
      delete_at:
        type: string
      id:
        type: integer
      uid:
        type: integer
    type: object
  models.Blocked:
    properties:
      create_at:
        type: string
      delete_at:
        type: string
      expired_at:
        type: string
      id:
        type: integer
      last_time:
        type: integer
      uid:
        type: integer
    type: object
  models.Floor:
    properties:
      content:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      id:
        type: integer
      nickname:
        type: string
      post_id:
        type: integer
      reply_to:
        type: string
      reply_to_floor:
        type: integer
      uid:
        type: integer
    type: object
  models.ListRes:
    properties:
      list:
        type: object
      total:
        example: 1
        type: integer
    type: object
  models.Notice:
    properties:
      content:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      id:
        type: integer
    type: object
  models.Post:
    properties:
      content:
        type: string
      create_at:
        type: string
      delete_at:
        type: string
      id:
        type: integer
      picture_url:
        type: string
      uid:
        type: integer
      updated_at:
        type: string
    type: object
  models.Report:
    properties:
      create_at:
        type: string
      delete_at:
        type: string
      id:
        type: integer
      post_id:
        type: string
      reason:
        type: string
      uid:
        type: integer
    type: object
  models.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  models.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
host: 116.62.107.46:7013
info:
  contact: {}
  description: 青年湖底api
  license:
    name: Apache 2.0
  title: QNHD API
  version: "1.0"
paths:
  /b/admin:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 管理员昵称
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除管理员
      tags:
      - backend
      - admin
    get:
      consumes:
      - application/json
      parameters:
      - description: 管理员昵称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Admin'
                        type: array
                    type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取所有的管理员
      tags:
      - backend
      - admin
    post:
      consumes:
      - application/json
      parameters:
      - description: 管理员昵称
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: 管理员密码, 32位小写md5
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 增加管理员
      tags:
      - backend
      - admin
    put:
      consumes:
      - application/json
      parameters:
      - description: 管理员昵称
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: 管理员密码, 32位小写md5
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 参数错误
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 修改管理员密码
      tags:
      - backend
      - admin
  /b/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: admin name
        in: query
        name: name
        required: true
        type: string
      - description: admin password，发送密码的32位小写md5
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/b.authRes'
              type: object
        "20003":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      summary: 后端获取token
      tags:
      - backend
      - auth
  /b/auth/{token}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/b.authRes'
              type: object
        "400":
          description: 无token
          schema:
            $ref: '#/definitions/models.Response'
        "20001":
          description: token检查失败
          schema:
            $ref: '#/definitions/models.Response'
        "20003":
          description: token生成失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 后端刷新token
      tags:
      - backend
      - auth
  /b/banned:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除封号用户(解禁), 此接口不使用
      tags:
      - backend
      - banned
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Banned'
                        type: array
                    type: object
              type: object
        "400":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取封号用户
      tags:
      - backend
      - banned
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: body
        name: uid
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加封号用户
      tags:
      - backend
      - banned
  /b/blocked:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除禁言用户
      tags:
      - backend
      - blocked
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Blocked'
                        type: array
                    type: object
              type: object
        "400":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取禁言用户
      tags:
      - backend
      - blocked
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: body
        name: uid
        required: true
        schema:
          type: integer
      - description: 持续天数 0<?<=30
        in: body
        name: last
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加禁言用户
      tags:
      - backend
      - blocked
  /b/notice:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 公告id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除公告
      tags:
      - backend
      - notice
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        $ref: '#/definitions/models.Notice'
                    type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取公告
      tags:
      - backend
      - notice
    post:
      consumes:
      - application/json
      parameters:
      - description: 公告内容
        in: body
        name: content
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加公告
      tags:
      - backend
      - notice
    put:
      consumes:
      - application/json
      parameters:
      - description: 公告id
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: 公告内容
        in: body
        name: content
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 修改公告
      tags:
      - backend
      - notice
  /b/post:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 帖子id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除帖子
      tags:
      - backend
      - post
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        $ref: '#/definitions/models.Post'
                    type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取帖子
      tags:
      - backend
      - post
  /b/report:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Report'
                        type: array
                    type: object
              type: object
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取举报列表
      tags:
      - backend
      - report
  /b/user:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户邮箱
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效的参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除用户，不应使用此接口
      tags:
      - backend
      - user
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        type: integer
      - description: 用户邮箱
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        $ref: '#/definitions/b.UserResponse'
                    type: object
              type: object
        "400":
          description: 无效的参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - backend
      - user
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户邮箱, 必须10位学号的tju邮箱
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: 用户密码, 32位小写md5
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效的参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加用户，不应使用此接口
      tags:
      - backend
      - user
    put:
      consumes:
      - application/json
      parameters:
      - description: 用户邮箱
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: 用户新密码, 32位小写md5
        in: body
        name: new_password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效的参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 修改用户数据
      tags:
      - backend
      - user
  /f/auth:
    get:
      consumes:
      - application/json
      parameters:
      - description: admin name
        in: query
        name: name
        required: true
        type: string
      - description: admin password，发送密码的32位小写md5
        in: query
        name: password
        required: true
        type: string
      - description: jwt token，如果用此参数无需传递name和password，可用于刷新token
        in: query
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/f.authRes'
              type: object
        "20003":
          description: 失败不返回数据
          schema:
            $ref: '#/definitions/models.Response'
      summary: 前端获取token
      tags:
      - front
      - auth
  /f/auth/{token}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/f.authRes'
              type: object
        "400":
          description: 无token
          schema:
            $ref: '#/definitions/models.Response'
        "20001":
          description: token检查失败
          schema:
            $ref: '#/definitions/models.Response'
        "20003":
          description: token生成失败
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 前端刷新token
      tags:
      - front
      - auth
  /f/floor:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: query
        name: uid
        required: true
        type: string
      - description: 帖子id
        in: query
        name: post_id
        required: true
        type: string
      - description: 楼层id
        in: query
        name: floor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除楼层
      tags:
      - front
      - floor
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户id
        in: body
        name: uid
        required: true
        schema:
          type: string
      - description: 回复楼层id
        in: body
        name: reply_to_floor
        required: true
        schema:
          type: string
      - description: 帖子id
        in: body
        name: post_id
        required: true
        schema:
          type: string
      - description: 内容
        in: body
        name: content
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 回复楼层
      tags:
      - front
      - floor
  /f/floors:
    get:
      consumes:
      - application/json
      parameters:
      - description: 分页数量
        in: query
        name: page
        type: string
      - description: 帖子id
        in: query
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        $ref: '#/definitions/models.Floor'
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取楼层
      tags:
      - front
      - floor
  /f/post:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 发帖人id
        in: query
        name: uid
        required: true
        type: string
      - description: 帖子id
        in: query
        name: post_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除帖子
      tags:
      - front
      - post
    get:
      consumes:
      - application/json
      parameters:
      - description: 帖子id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  $ref: '#/definitions/f.postRes'
              type: object
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取单个post
      tags:
      - front
      - post
    post:
      consumes:
      - application/json
      parameters:
      - description: 发帖人id
        in: formData
        name: uid
        required: true
        type: string
      - description: 帖子内容
        in: formData
        name: content
        required: true
        type: string
      - description: 图片data，最大5MB
        in: formData
        name: picture
        type: string
      - description: 标签id数组
        in: formData
        items:
          type: integer
        name: tags
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加帖子
      tags:
      - front
      - post
  /f/posts:
    get:
      consumes:
      - application/json
      parameters:
      - description: 帖子内容
        in: query
        name: content
        type: string
      - description: 页数, 从0开始 默认为0
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/models.ListRes'
                  - properties:
                      list:
                        $ref: '#/definitions/f.postResponse'
                    type: object
              type: object
        "400":
          description: 无效参数
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取多个简短post
      tags:
      - front
      - post
  /f/tag:
    get:
      consumes:
      - application/json
      parameters:
      - description: 标签id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除标签
      tags:
      - front
      - tag
    post:
      consumes:
      - application/json
      parameters:
      - description: 标签名称
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加标签
      tags:
      - front
      - tag
  /f/user:
    post:
      consumes:
      - application/json
      parameters:
      - description: tju邮箱，必须是10位学号
        in: query
        name: email
        required: true
        type: string
      - description: 密码，32位md5
        in: query
        name: password
        required: true
        type: string
      - description: 邮箱验证码
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 前端新建用户，没有带code，会发送邮件，带code的，会验证code并且新建用户
      tags:
      - front
      - user
    put:
      consumes:
      - application/json
      parameters:
      - description: 用户邮箱
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
      security:
      - ApiKeyAuth: []
      summary: 更改密码
      tags:
      - front
      - user
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
